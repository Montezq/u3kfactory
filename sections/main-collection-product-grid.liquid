{{ 'component-price.css' | asset_url | stylesheet_tag }}

<div class="section-{{ section.id }} pb-12">
  {%- paginate collection.products by section.settings.products_per_page -%}
    <div>
      <div class="collection-hero sticky pb-9 top-[27px] bg-gray-10 lg:bg-white z-[2]">
        <div class="pb-2.5">
          <h1 class="collection-hero__title text-3xl font-coutureBold text-center">
            <span class="visually-hidden">{{ 'sections.collection_template.title' | t }}: </span>
            {%- if section.settings.heading != blank -%}
              {{ section.settings.heading }}
            {%- else -%}
              {{- collection.title | escape -}}
            {%- endif -%}
          </h1>
        </div>
        <div class="flex items-center relative">
          <div class="mr-6">
            <button class="uppercase font-semibold text-[13px] tracking-wider open-filter">+ Filters (0)</button>
          </div>
          <div class="w-[162px] mt-0.5">
            {%- liquid
              assign value = 3
              if section.settings.grid_template == 'small'
                assign value = 3
              elsif section.settings.grid_template == 'medium'
                assign value = 2
              else
                assign value = 1
              endif
            -%}
            <input
              class="w-full block range range-input"
              type="range"
              id="grid_template"
              name="Grid Template"
              min="1"
              max="3"
              value="{{ value }}"
              step="1"
            >
          </div>
          <div class="absolute top-0 left-0 bg-gray-10 lg:bg-white z-[2] w-full filter-modal">
            <div class="flex">
              <div class="flex flex-col pr-6 mr-3 relative">
                <button class="uppercase font-semibold text-[13px] tracking-wider close-filter text-gray-850 mb-2">
                  Close
                </button>
                <a
                  class="uppercase font-semibold text-[13px] tracking-wider close-filter inline-block text-gray-600"
                  href="{{ collection.filters.url_to_remove }}"
                  >Clear</a
                >
              </div>
              <div class="flex flex-wrap gap-5">
                {%- for filter in collection.filters -%}
                  <div class="w-48">
                    <h3>{{ filter.label | escape }}</h3>
                    <ul>
                      {%- for value in filter.values -%}
                        <li>
                          <a href="{{ value.url_to_add }}">
                            {{ value.label | escape }} --
                            {{ value.active | escape }}
                          </a>
                        </li>
                      {%- endfor -%}
                    </ul>
                  </div>
                {%- endfor -%}
              </div>
            </div>
          </div>
        </div>
      </div>
      {%- for filter in collection.filters -%}
        <br>
        {%- for value in filter.values -%}
          <a href="{{ value.url_to_add }}" class="active-facets__button active-facets__button--light">
            <span class="active-facets__button-inner button button--tertiary">
              {{ filter.label | escape }}: {{ value.label | escape }}
              <span class="visually-hidden">{{ 'products.facets.clear_filter' | t }}</span>
            </span>
          </a>
        {%- endfor -%}
      {%- endfor -%}
      {% comment %}
        {{ 'component-facets.css' | asset_url | stylesheet_tag }}
        <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
        {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
          <aside
            aria-labelledby="verticalTitle"
            class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}"
            id="main-collection-filters"
            data-id="{{ section.id }}"
          >
            {% render 'facets',
              results: collection,
              enable_filtering: section.settings.enable_filtering,
              enable_sorting: section.settings.enable_sorting,
              filter_type: section.settings.filter_type,
              paginate: paginate
            %}
          </aside>
        {%- endif -%}
      {% endcomment %}

      <div id="filter-results"></div>
      <div
        class="{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        id="ProductGridContainer"
        {% if settings.animations_reveal_on_scroll %}
          data-cascade
        {% endif %}
      >
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{
                  'sections.collection_template.use_fewer_filters_html'
                  | t: link: collection.url, class: 'underlined-link link'
                }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection">
            <div class="loading-overlay gradient"></div>
            <ul
              id="product-grid"
              data-id="{{ section.id }}"
              class="grid collection-grid__list collection-grid__list-{{ section.settings.grid_template }}"
            >
              {%- for product in collection.products -%}
                {% assign lazy_load = false %}
                {%- if forloop.index > 4 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}
                <li
                  class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                  {% if settings.animations_reveal_on_scroll %}
                    data-cascade
                    style="--animation-order: {{ forloop.index }};"
                  {% endif %}
                >
                  {% render 'card-product', card_product: product, lazy_load: lazy_load, section_id: section.id %}
                </li>
              {%- endfor -%}
            </ul>

            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endpaginate -%}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      var rangeInputs = document.querySelectorAll('.range-input');
      var productList = document.getElementById('product-grid');

      function updateGridClass(value) {
        productList.classList.remove(
          'collection-grid__list-small',
          'collection-grid__list-medium',
          'collection-grid__list-big'
        );
        switch (value) {
          case '1':
            productList.classList.add('collection-grid__list-big');
            break;
          case '2':
            productList.classList.add('collection-grid__list-medium');
            break;
          case '3':
            productList.classList.add('collection-grid__list-small');
            break;
        }
      }

      function syncRangeInputs(value) {
        rangeInputs.forEach(function (input) {
          input.value = value;
        });
        updateGridClass(value);
      }
      rangeInputs.forEach(function (input) {
        input.addEventListener('input', function () {
          syncRangeInputs(this.value);
        });
      });
      if (rangeInputs.length > 0) {
        updateGridClass(rangeInputs[0].value);
      }
    });
  </script>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Select all filter links
    var filterLinks = document.querySelectorAll('a.active-facets__button');

    // Add click event listener to each link
    filterLinks.forEach(function (link) {
      link.addEventListener('click', function (event) {
        // Prevent the default link action
        event.preventDefault();

        // Get the URL to fetch from the href attribute of the clicked link
        var urlToFetch = this.getAttribute('href');

        // Perform the AJAX request
        fetch(urlToFetch)
          .then((response) => response.text()) // Convert the response to text
          .then((html) => {
            // Here, update the page content with the fetched HTML
            // For example, if you have a <div> with an id of "filter-results" where the results should go:
            document.getElementById('filter-results').innerHTML = html;

            // You might need to re-initialize some JavaScript functionality here if the new content requires it
          })
          .catch((error) => {
            console.error('Error fetching filtered results:', error);
          });
      });
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "t:sections.main-collection-product-grid.settings.heading.label",
      "info": "t:sections.main-collection-product-grid.settings.heading.info"
    },
    {
      "type": "select",
      "id": "grid_template",
      "options": [
        {
          "value": "small",
          "label": "t:sections.main-collection-product-grid.settings.grid_template.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-collection-product-grid.settings.grid_template.options__2.label"
        },
        {
          "value": "big",
          "label": "t:sections.main-collection-product-grid.settings.grid_template.options__3.label"
        }
      ],
      "default": "small",
      "label": "t:sections.main-collection-product-grid.settings.grid_template.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    }
  ]
}
{% endschema %}
