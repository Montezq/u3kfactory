{{ 'component-price.css' | asset_url | stylesheet_tag }}

<div class="section-{{ section.id }} pb-12">
  {%- paginate collection.products by 24 -%}
    <div>
      <div class="collection-hero sticky pb-9 top-[27px] bg-gray-10 lg:bg-white z-[2]">
        <div class="pb-2.5">
          <h1 class="collection-hero__title text-3xl font-coutureBold text-center">
            <span class="visually-hidden">{{ 'sections.collection_template.title' | t }}: </span>
            {%- if section.settings.heading != blank -%}
              {{ section.settings.heading }}
            {%- else -%}
              {{- collection.title | escape -}}
            {%- endif -%}
          </h1>
        </div>
        <div class="flex items-center relative">
          <div class="mr-6">
            <button class="uppercase font-semibold text-[13px] tracking-wider open-filter">+ Filters (0)</button>
          </div>
          <div class="w-[162px] mt-0.5">
            {%- liquid
              assign value = 3
              if section.settings.grid_template == 'small'
                assign value = 3
              elsif section.settings.grid_template == 'medium'
                assign value = 2
              else
                assign value = 1
              endif
            -%}
            <input
              class="w-full block range range-input"
              type="range"
              id="grid_template"
              name="Grid Template"
              min="1"
              max="3"
              value="{{ value }}"
              step="1"
            >
          </div>
          <div class="absolute top-0 left-0 bg-gray-10 lg:bg-white z-[2] w-full filter-modal pb-10">
            {%- liquid
              assign sort_by = collection.sort_by | default: collection.default_sort_by
              if collection.url
                assign results_url = collection.url
              else
                assign terms = collection.terms | escape
                assign results_url = '?q=' | append: terms | append: '&options%5Bprefix%5D=last&sort_by=' | append: sort_by
              endif
            -%}
            <div class="flex">
              <div class="flex flex-col pr-6 mr-3 relative">
                <button class="uppercase font-semibold text-[13px] tracking-wider close-filter text-gray-850 mb-2">
                  Close
                </button>
                <a
                  class="uppercase font-semibold text-[13px] tracking-wider close-filter inline-block text-gray-600 filter__item"
                  href="{{  results_url }}"
                  >Clear</a
                >
              </div>
              <div class="flex flex-wrap gap-5">
                {%- for filter in collection.filters -%}
                  <div class="w-48">
                    <h3 class="uppercase font-bold mb-0.5 text-[13px] tracking-xwidest text-gray-850">
                      {{ filter.label | escape }}
                    </h3>
                    <ul>
                      {%- for value in filter.values -%}
                        {%- liquid
                          assign filter_active = false
                          assign filter_url = value.url_to_add
                          if value.active
                            assign filter_url = value.url_to_remove
                            assign filter_active = true
                          endif
                        -%}
                        <li>
                          <label class="block w-fit filter-label relative cursor-pointer">
                            <input
                              class="!w-0 !h-0 opacity-0 absolute top-0 left-0"
                              type="checkbox"
                              value="{{value.label}}"
                              {% if filter_active %}
                                checked
                              {% endif %}
                            >
                            <div
                              data-href="{{ filter_url }}"
                              class="flex items-center filter__item uppercase font-bold text-[11px] tracking-widest text-gray-850"
                            >
                              <span>
                                {{ value.label | escape }}
                              </span>
                              <span
                                class="filter_checked w-[7px] h-[7px] bg-gray-850 ml-2 opacity-0 duration-300 ease-in-out"
                              ></span>
                            </div>
                          </label>
                        </li>
                      {%- endfor -%}
                    </ul>
                  </div>
                {%- endfor -%}
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        class="{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        id="ProductGridContainer"
        {% if settings.animations_reveal_on_scroll %}
          data-cascade
        {% endif %}
      >
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{
                  'sections.collection_template.use_fewer_filters_html'
                  | t: link: collection.url, class: 'underlined-link link'
                }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection">
            <div class="loading-overlay gradient"></div>
            <ul
              id="product-grid"
              data-id="{{ section.id }}"
              class="grid collection-grid__list collection-grid__list-{{ section.settings.grid_template }}"
            >
              {%- for product in collection.products -%}
                {% assign lazy_load = false %}
                {%- if forloop.index > 4 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}
                <li
                  class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                  {% if settings.animations_reveal_on_scroll %}
                    data-cascade
                    style="--animation-order: {{ forloop.index }};"
                  {% endif %}
                >
                  {% render 'card-product', card_product: product, lazy_load: lazy_load, section_id: section.id %}
                </li>
              {%- endfor -%}
            </ul>

            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endpaginate -%}
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    var rangeInputs = document.querySelectorAll('.range-input');
    var productList = document.getElementById('product-grid');

    function updateGridClass(value) {
      productList.classList.remove(
        'collection-grid__list-small',
        'collection-grid__list-medium',
        'collection-grid__list-big'
      );
      switch (value) {
        case '1':
          productList.classList.add('collection-grid__list-big');
          break;
        case '2':
          productList.classList.add('collection-grid__list-medium');
          break;
        case '3':
          productList.classList.add('collection-grid__list-small');
          break;
      }
    }

    function syncRangeInputs(value) {
      rangeInputs.forEach(function (input) {
        input.value = value;
      });
      updateGridClass(value);
    }
    rangeInputs.forEach(function (input) {
      input.addEventListener('input', function () {
        syncRangeInputs(this.value);
      });
    });
    if (rangeInputs.length > 0) {
      updateGridClass(rangeInputs[0].value);
    }
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    var filterLinks = document.querySelectorAll('.filter__item');

    filterLinks.forEach(function (link) {
      link.addEventListener('click', function () {
        // Extract URL from data-href attribute
        var urlToFetch = this.getAttribute('data-href');
        const queryString = urlToFetch.includes('?') ? urlToFetch.slice(urlToFetch.indexOf('?')) : '';

        // Determine the new URL based on whether the query string is already present
        let newUrl = '';
        const currentUrl = window.location.href;
        const currentQueryString = window.location.search;

        if (currentQueryString === queryString) {
          // If the current query string is the same as this filter's, remove it
          newUrl = window.location.pathname;
        } else {
          // Otherwise, update the URL with this filter's query string
          newUrl = window.location.pathname + queryString;
        }

        // Update browser URL without reloading the page
        window.history.pushState({ path: newUrl }, '', newUrl);
        console.log(newUrl);
        // Fetch and update content
        fetch(newUrl)
          .then((response) => response.text())
          .then((html) => {
            var newContent = new DOMParser()
              .parseFromString(html, 'text/html')
              .getElementById('ProductGridContainer').innerHTML;
            document.getElementById('ProductGridContainer').innerHTML = newContent;
          })
          .catch((error) => {
            console.error('Error fetching filtered results:', error);
          });
      });
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "t:sections.main-collection-product-grid.settings.heading.label",
      "info": "t:sections.main-collection-product-grid.settings.heading.info"
    },
    {
      "type": "select",
      "id": "grid_template",
      "options": [
        {
          "value": "small",
          "label": "t:sections.main-collection-product-grid.settings.grid_template.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-collection-product-grid.settings.grid_template.options__2.label"
        },
        {
          "value": "big",
          "label": "t:sections.main-collection-product-grid.settings.grid_template.options__3.label"
        }
      ],
      "default": "small",
      "label": "t:sections.main-collection-product-grid.settings.grid_template.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    }
  ]
}
{% endschema %}
