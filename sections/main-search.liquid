{{ 'component-price.css' | asset_url | stylesheet_tag }}

<div class="template-search max-lg:px-2{% unless search.performed and search.results_count > 0 %} template-search--empty{% endunless %}">
  <div
    id="bar"
    class="ds_element dissapearing heading__search max-lg:pt-2 max-lg:pb-4 fixed top-[67px] lg:top-[27px] bg-gray-10 lg:bg-white max-lg:duration-300 max-lg:ease-in-out flex justify-center"
  >
    <h1 class="font-coutureBold text-2xl md:text-3xl uppercase text-center">
      {{- 'templates.search.title' | t -}}
    </h1>
  </div>
  <div class="search__body text-center hidden">
    {%- if search.performed -%}
      {% assign search_terms = search.terms | split: ' ' %}
      {% assign term_list = '' %}

      {% for term in search_terms %}
        {% assign term = term | capitalize %}
        {% if forloop.first %}
          {% assign term_list = term_list | append: term %}
        {% else %}
          {% assign term_list = term_list | append: ', ' | append: term %}
        {% endif %}
      {% endfor %}

      {%- unless section.settings.enable_filtering or section.settings.enable_sorting -%}
        {%- if search.results_count > 0 -%}
          <p role="status" class="uppercase text-[17px]">
            {{ search.results_count }} Search results for <strong>"{{ term_list }}"</strong> found in
          </p>
        {%- endif -%}
      {%- endunless -%}
      {%- if search.results_count == 0 and search.filters == empty -%}
        <p role="status" class="uppercase text-[17px] py-[30vh]">
          {{ 'templates.search.no_results_html' | t: terms: term_list }}
        </p>
      {%- endif -%}
    {%- endif -%}
  </div>
  {%- if search.performed -%}
    {% assign collections_array = '' %}

    {% for item in search.results %}
      {% if item.object_type == 'product' %}
        {% for collection in item.collections %}
          {% unless collections_array contains collection.handle or collection.handle == 'home-page-collection' %}
            {% if collection.handle contains 'all' %}
              {% assign collections_array = collections_array | append: collection.handle | append: ',' %}
            {% endif %}
          {% endunless %}
        {% endfor %}
      {% endif %}
    {% endfor %}

    {% assign collections_array = collections_array | split: ',' | uniq %}

    {% for collection_handle in collections_array %}
      {% assign collection_products = '' %}
      {% for item in search.results %}
        {% if item.object_type == 'product' %}
          {% for collection in item.collections %}
            {% if collection.handle == collection_handle %}
              {% assign collection_products = collection_products | append: item.handle | append: ',' %}
            {% endif %}
          {% endfor %}
        {% endif %}
      {% endfor %}
      {% assign collection_products = collection_products | split: ',' | uniq %}
      {% assign collection = collections | where: 'handle', collection_handle | first %}
      <div class="search__group hidden">
        {% assign collection_title_parts = collection.title | remove: 'ALL' | remove: 'all' | remove: 'All' %}
        <h2 class="uppercase text-[14px] mb-3 md:mb-5">{{ collection_title_parts }}</h2>
        <ul
          class="grid search__grid grid-cols-3"
          role="list"
        >
          {% for product_handle in collection_products %}
            {% assign product = all_products[product_handle] %}
            {% if product %}
              {% assign lazy_load = false %}
              {%- if forloop.index > 2 -%}
                {%- assign lazy_load = true -%}
              {%- endif -%}

              <li
                class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                data-collections="{{ product.collections | map: 'handle' | join: ',' }}"
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                {% endif %}
              >
                {% render 'card-product', card_product: product, lazy_load: lazy_load %}
              </li>
            {% endif %}
          {% endfor %}
        </ul>
      </div>
    {% endfor %}
  {%- endif -%}
  <div class="search__body text-center">
    <p role="status" class="uppercase text-[17px]" id="search-status"></p>
  </div>
  <div id="search-results-container"></div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const searchResultsContainer = document.getElementById('search-results-container');
    const searchStatus = document.getElementById('search-status');
    const groupedResults = JSON.parse(localStorage.getItem('groupedSearchResults'));
    const searchTerms = JSON.parse(localStorage.getItem('searchTerms'));

    const termList = searchTerms.map((term) => term.charAt(0).toUpperCase() + term.slice(1)).join(', ');

    if (groupedResults && groupedResults.length > 0) {
      const totalResults = groupedResults.reduce((acc, group) => acc + group.products.length, 0);
      searchStatus.innerHTML = `${totalResults} Search results for <strong>"${termList}"</strong> found:`;

      groupedResults.forEach((group) => {
        const groupContainer = document.createElement('div');
        groupContainer.classList.add('search__group');

        const groupTitle = document.createElement('h2');
        groupTitle.classList.add('uppercase', 'text-[14px]', 'mb-3', 'md:mb-5');
        // Replace hyphens with spaces in collection title
        groupTitle.textContent = group.collection.replace(/-/g, ' ').replace(/all|ALL|All/, '');
        groupContainer.appendChild(groupTitle);

        const productList = document.createElement('ul');
        productList.classList.add('grid', 'search__grid', 'grid-cols-3');
        productList.setAttribute('role', 'list');
        group.products.forEach((productHTML) => {
          const listItem = document.createElement('li');
          listItem.innerHTML = productHTML;
          productList.appendChild(listItem);
        });
        groupContainer.appendChild(productList);
        searchResultsContainer.appendChild(groupContainer);
      });

      // Clear the grouped results from local storage after displaying them
      localStorage.removeItem('groupedSearchResults');
      localStorage.removeItem('searchTerms');
    } else {
      searchStatus.innerHTML = `No search results found for <strong>"${termList}"</strong>.`;
    }
  });
</script>

{% schema %}
{
  "name": "t:sections.main-search.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-search.settings.show_vendor.label"
    }
  ]
}
{% endschema %}
