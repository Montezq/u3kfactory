<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
<div class="my-favorites max-lg:pb-[90px]">
  <div
    id="bar"
    class="ds_element dissapearing my-favorites__heading max-lg:pt-[7px] max-lg:pb-[8px] fixed top-[54px] lg:!right-5 bg-gray-10 lg:bg-white max-lg:duration-300 max-lg:ease-in-out flex justify-center"
  >
    <h1 class="font-coutureBold text-[19px] md:text-3xl max-lg:leading-none uppercase text-center">My Favorites</h1>
  </div>
  <div class="my-favorites__body">
    <ul class="wishlist__list wishlist__container"></ul>
    <div class="no-favorites hidden">
      <h2 class="text-[18px] md:text-[30px] uppercase text-center tracking-xwidest py-[24.8vh] mt-[67px]">
        NO FAVORITES
      </h2>
    </div>
  </div>
</div>
{%- if settings.cart_type == 'notification' -%}
  {%- render 'cart-notification',
    color_scheme: section.settings.color_scheme,
    desktop_menu_type: section.settings.menu_type_desktop
  -%}
{%- endif -%}

<script>
  // Function to capitalize the first letter of each word, but leave "cm" in lowercase
  function capitalizeWords(str) {
    return str
      .split(' ')
      .map((word) => {
        if (word.toLowerCase() === 'cm') return 'cm';
        return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
      })
      .join(' ');
  }

  // Function to render the wishlist from local storage
  function renderWishlist() {
    // Get current wishlist items from localStorage
    const wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
    const noFavorites = document.querySelector('.no-favorites');

    if (wishlist.length < 1) noFavorites.classList.remove('hidden');

    // Find the wishlist container
    const wishlistContainer = document.querySelector('.wishlist__container');

    // Clear the container before rendering
    wishlistContainer.innerHTML = '';

    // Loop through the wishlist items and generate the HTML
    wishlist.forEach((item) => {
      const wishlistItem = document.createElement('li');
      wishlistItem.classList.add('wishlist__item', 'grid', 'grid-cols-2');

      // Capitalize optionSize and optionMaterial
      const optionSizeCapitalized = item.optionSize ? capitalizeWords(item.optionSize) : '';
      const optionMaterialCapitalized = item.optionMaterial ? capitalizeWords(item.optionMaterial) : '';

      wishlistItem.innerHTML = `
        <div class="wishlist__item-img aspect-square md:aspect-[4/3.83]">
          <a href="${item.productUrl}">
            <img
              class="w-full h-full object-cover"
              src="${item.productImage}"
              width="656"
              height="640"
            >
          </a>
        </div>
        <div class="wishlist__item-data flex-1 max-md:px-2.5 max-lg:px-4 max-md:flex max-md:flex-wrap">
          <div class="wishlist__item-data-title md:mb-[59px] max-md:flex-1 min-w-0">
            <h2 class="text-[19px] md:text-[33px] font-semibold leading-none md:mb-[7px] truncate pr-2.5">
              <a href="${item.productUrl}">
                ${item.productTitle}
              </a>
            </h2>
            <h3 class="leading-none text-[13px] md:text-[26px] font-helveticaThinCond italic tracking-wide font-normal">by ${
              item.productVendor
            }</h3>
          </div>
          <div class="wishlist__item-data-variant mb-[5px] md:mb-[90px] max-md:text-right max-md:flex-1 flex flex-col max-md:mt-[1px] whitespace-nowrap w-fit">
            <h4 class="text-[17px] md:text-[24px] max-md:mb-[9px] tracking-xwidest font-bold leading-none">${
              item.noVariant ? 'NO SIZE SELECTED' : `${optionSizeCapitalized} ${optionMaterialCapitalized}`
            }
            </h4>
            <h4 class="text-[17px] md:text-[24px] tracking-xwidest font-bold leading-none md:mb-5 md:-order-1">${
              item.noVariant ||
              item.dataUnframed ||
              item.optionMaterial == 'paper print' ||
              item.optionMaterial == 'oil print' ||
              item.optionMaterial == 'PAPER PRINT' ||
              item.optionMaterial == 'OIL PRINT' ||
              item.collectionList.includes('original')
                ? 'Unframed'
                : item.optionMaterial == 'canvas print' || item.optionMaterial == 'CANVAS PRINT'
                ? 'Unstretched'
                : ''
            }</h4>
            <h4 class="font-bold text-[17px] md:text-sm tracking-xwidest md:hidden leading-none mt-[13px]">
              ${
                item.noVariant
                  ? '0.00 {{ cart.currency.symbol }}'
                  : `
                ${(() => {
                  const priceString = item.productPrice;
                  const priceNumber = Number(priceString.replace(/[^0-9]/g, ''));
                  const formattedPrice = (priceNumber / 100).toFixed(2);
                  return formattedPrice + ' {{ cart.currency.symbol }}';
                })()}
                `
              }
              </h4>
          </div>
          <div class="wishlist__item-data-buttons max-md:text-right max-md:w-full product !pt-[10px] md:!pt-[1vh]">
            ${
              item.vatText
                ? `<p class="text-[10px] md:text-[13px] font-bold leading-none italic md:whitespace-nowrap text-gray-850 ${
                    item.noVariant ? 'md:hidden' : ''
                  }">${item.vatText}</p>`
                : ``
            }
            <div class="md:max-w-[360px] mt-4">
              ${
                item.noVariant
                  ? `
                  <a
                    href="${item.productUrl}"
                    class="btn btn_primary btn_small flex text-center uppercase relative w-full mb-[11px]"
                  >
                    <span class="text-white">choose size/medium</span>
                    <span
                      class="icon-FULL-ICON-SET-WEBSITE-FINAL_Choose-Medium-Arrow absolute top-1/2 -translate-y-1/2 right-[18px] text-white"
                    ></span>
                  </a>
                `
                  : `
                  <div class="flex md:max-w-[360px] mb-[11px] md:mb-4">
                    <div id="price-template--17986287468764__main-buy" class="max-w-[136px] max-md:hidden w-full border-2 border-black text-center flex items-center justify-center no-js-hidden" role="status">
                      <div class="price text-sm md:text-xl tracking-widest leading-none !font-bold">
                        <div class="price__container">
                          <div class="price__regular">
                            <span class="visually-hidden visually-hidden--inline">Regular price</span>
                            <span class="price-item">
                              ${(() => {
                                const priceString = item.productPrice;
                                const priceNumber = Number(priceString.replace(/[^0-9]/g, ''));
                                const formattedPrice = (priceNumber / 100).toFixed(2);
                                return formattedPrice + ' €';
                              })()}
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="flex-1">
                      <div>
                        <product-form class="product-form" data-hide-errors="false" data-section-id="template--17986287468764__main">
                          <div class="product-form__error-message-wrapper" role="alert" hidden="">
                            <svg aria-hidden="true" focusable="false" class="icon icon-error" viewBox="0 0 13 13">
                              <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"></circle>
                              <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"></circle>
                              <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"></path>
                              <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
                              </path>
                            </svg>
                            <span class="product-form__error-message"></span>
                          </div>
                          <form method="post" action="/cart/add" id="product-form-template--17986287468764__main" accept-charset="UTF-8" class="form" enctype="multipart/form-data" novalidate="novalidate" data-type="add-to-cart-form">
                            <input type="hidden" name="form_type" value="product">
                            <input type="hidden" name="utf8" value="✓">
                            <input type="hidden" name="id" value="${item.variantId}" class="product-variant-id">
                            <div class="product-form__buttons">
                              <button id="ProductSubmitButton-template--17986287468764__main" type="submit" name="add" class="product-form__submit flex items-center btn btn_primary btn_small w-full relative md:flex" ${
                                item.available === 'true' ? '' : 'disabled'
                              }>
                                <span class="w-full pr-2">${
                                  item.available === 'true'
                                    ? "{{ 'products.product.add_to_cart' | t }}"
                                    : "{{ 'products.product.sold_out' | t }}"
                                }</span>
                                <span class="block -mt-0.5 -mr-[3px] icon-FULL-ICON-SET-WEBSITE-FINAL_Add-to-Cart-v2 max-md:absolute max-md:top-1/2 max-md:-translate-y-1/2 max-md:right-5 text-[28px] md:ml-auto"></span>
                              </button>
                            </div>
                            <input type="hidden" name="product-id" value="${item.productId}">
                            <input type="hidden" name="section-id" value="template--17986287468764__main">
                          </form>
                        </product-form>
                      </div>
                    </div>
                  </div>
                `
              }
              <button class="btn btn_primary btn_small flex text-center uppercase relative w-full remove-from-wishlist" data-id="${
                item.productId
              }" data-variant-id="${item.variantId}">
                <span class="text-white">remove from list</span>
                <span
                  class="icon-FULL-ICON-SET-WEBSITE-FINAL_Trash-Bin-v2 absolute top-1/2 -translate-y-1/2 right-[18px] text-white"
                ></span>
              </button>
            </div>
          </div>
        </div>
      `;

      wishlistContainer.appendChild(wishlistItem);
    });

    // Attach event listeners to the remove buttons
    document.querySelectorAll('.remove-from-wishlist').forEach((button) => {
      button.addEventListener('click', (event) => {
        const productId = event.currentTarget.getAttribute('data-id');
        const variantId = event.currentTarget.getAttribute('data-variant-id');
        removeFromWishlist(productId, variantId);
        renderWishlist();
      });
    });
  }

  // Call the renderWishlist function when the DOM is fully loaded
  document.addEventListener('DOMContentLoaded', () => {
    renderWishlist();
  });
</script>

{% schema %}
{
  "name": "My Favorites",
  "tag": "section",
  "class": "section",
  "settings": []
}
{% endschema %}
