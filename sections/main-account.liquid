{{ 'customer.css' | asset_url | stylesheet_tag }}
<style>
  .my-account__adress{
    input{
      &:checked{
        &+.my-account__adress-radio{
          .my-account__adress-radio-fake{
            background-color: {{ settings.default_color }};
          }
        }
      }
    }
  }
</style>
<div class="customer account ">
  <div
    id="bar"
    class="ds_element dissapearing main-account__heading max-lg:py-3 fixed top-[67px] lg:top-[27px] bg-gray-10 lg:bg-white max-md:duration-300 max-md:ease-in-out flex justify-center"
  >
    <h1 class="font-coutureBold text-2xl md:text-3xl uppercase text-center">Prefererences</h1>
  </div>

  <div class="my-account__body">
    <div class="my-account__body-item pb-9 mb-[61px] border-b border-b-black">
      <div class="my-account__body-item-heading">
        <h2 class="font-axis text-base font-extrabold">Default name / adress</h2>
      </div>
      <div class="grid grid-cols-2 gap-8 justify-between">
        <div class="space-y-[37px]">
          {%- for address in customer.addresses -%}
            {% if forloop.index == 1 %}
              {% assign address_id = address.id %}
            {% endif %}
            <label
              class="my-account__adress block cursor-pointer w-[240px] relative"
              id="address-{{ address.id }}"
            >
              <input
                type="radio"
                name="adress_item"
                class="absolute w-0 left-0 top-0"
                {% if forloop.index == 1 %}
                  checked
                {% endif %}
              >
              <div class="flex items-center my-account__adress-radio">
                <div
                  class="bg-white w-3.5 h-3.5 rounded-full border-[2px] border-black duration-300 ease-in-out mr-3 my-account__adress-radio-fake"
                ></div>
                <div class="bg-white border border-black rounded-[4px] p-2 flex-1 w-full max-w-[210px] [&>p]:text-sm [&>p]:font-bold">
                  {{ address | format_address }}
                </div>
              </div>
            </label>
          {%- endfor -%}
        </div>
        <div class="flex flex-col space-y-[21px] w-[226px] ml-auto">
          <button class="btn btn_primary !text-[17px] w-full uppercase">Add Mew</button>
          <button class="btn btn_primary !text-[17px] w-full uppercase">Edit Address</button>
          {% comment %}
            <button
              class="btn btn_outlined !text-[17px] w-full uppercase remove-address"
              data-address-id="{{ address_id }}"
            >
              Remove Address
            </button>
          {% endcomment %}
          <form class="address-delete-form" method="post" action="{{ address_id }}">
            <input type="hidden" name="_method" value="delete">
            <button type="submit">{{ 'customer.addresses.delete' | t }}</button>
          </form>
        </div>
      </div>
      <a href="{{ routes.account_addresses_url }}">
        {{ 'customer.account.view_addresses' | t }} ({{ customer.addresses_count }})
      </a>
    </div>
  </div>
  <div
    class="my-account__footer fixed bottom-0 bg-gray-10 lg:bg-white max-lg:left-0 right-0 lg:pr-[27px]"
  >
    <div class="cart__footer isolate flex items-center justify-between h-full">
      {%- if section.settings.privacy_menu.links -%}
        <div class="max-md:hidden">
          <ul class="cart__footer-privacy-menu flex items-center flex-wrap">
            {%- for link in section.settings.privacy_menu.links -%}
              <li>
                <a
                  href="{{ link.url }}"
                  class="underline font-helveticaThinCond font-bold tracking-wider uppercase text-sm whitespace-nowrap"
                >
                  {{ link.title | escape }}
                </a>
              </li>
            {%- endfor -%}
          </ul>
        </div>
      {%- endif -%}
    </div>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const deleteForms = document.querySelectorAll('.address-delete-form');

    deleteForms.forEach((form) => {
      form.addEventListener('submit', function (event) {
        event.preventDefault();
        const addressId = this.getAttribute('action').split('/').pop();
        const confirmDeletion = confirm('Are you sure you want to remove this address?');

        if (confirmDeletion) {
          fetch(`/account/addresses/${addressId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-Requested-With': 'XMLHttpRequest',
              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
            },
            body: JSON.stringify({ _method: 'delete' }),
          })
            .then((response) => {
              if (response.ok) {
                document.getElementById(`address-${addressId}`).remove();
              } else {
                alert('Failed to remove address. Please try again.');
              }
            })
            .catch((error) => {
              console.error('Error:', error);
              alert('An error occurred. Please try again.');
            });
        }
      });
    });
  });
</script>
{% schema %}
{
  "name": "t:sections.main-account.name",
  "settings": [
    {
      "type": "link_list",
      "id": "privacy_menu",
      "label": "Privacy Menu"
    }
  ]
}
{% endschema %}
